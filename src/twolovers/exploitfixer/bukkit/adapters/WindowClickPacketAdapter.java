package twolovers.exploitfixer.bukkit.adapters;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.reflect.StructureModifier;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.inventory.InventoryType;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.InventoryView;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.Plugin;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.PacketsModule;
import twolovers.exploitfixer.shared.enums.Identity;

public class WindowClickPacketAdapter extends PacketAdapter {
	private final PacketsModule packetsModule;

	public WindowClickPacketAdapter(final Plugin plugin, final ModuleManager moduleManager) {
		super(plugin, PacketType.Play.Client.WINDOW_CLICK);
		this.packetsModule = moduleManager.getPacketsModule();
	}

	@Override
	public void onPacketReceiving(final PacketEvent event) {
		final Player player = event.getPlayer();

		if (player == null)
			packetsModule.checkPacket(event, Identity.WINDOW_CLICK_WRONG);
		else {
			final PacketContainer packet = event.getPacket();
			final StructureModifier<Integer> integers = packet.getIntegers();
			final InventoryView inventoryView = player.getOpenInventory();

			if (inventoryView == null)
				packetsModule.checkPacket(event, Identity.WINDOW_CLICK_WRONG);
			else if (integers.size() > 1) {
				final Inventory topInventory = inventoryView.getTopInventory();
				final Inventory bottomInventory = inventoryView.getBottomInventory();
				int maxSlots = inventoryView.countSlots();
				int slot = integers.read(1);

				if (topInventory.getType() == InventoryType.CRAFTING && bottomInventory.getType() == InventoryType.PLAYER)
					maxSlots += 4;

				if (slot >= maxSlots)
					packetsModule.checkPacket(event, Identity.WINDOW_CLICK_WRONG);
				else {
					final StructureModifier<ItemStack> structureModifier = packet.getItemModifier();

					if (structureModifier.size() > 0 && slot > 0) {
						final ItemStack itemStack = inventoryView.getItem(slot);
						final ItemStack itemStack1 = structureModifier.read(0);

						if (itemStack1 != null) {
							final Material material = itemStack1.getType();

							if ((material != Material.AIR && material != Material.getMaterial("LEGACY_AIR")) && !itemStack1.isSimilar(itemStack)) {
								packetsModule.checkPacket(event, Identity.WINDOW_CLICK_WRONG);
							} else
								packetsModule.checkPacket(event, Identity.WINDOW_CLICK);
						} else
							packetsModule.checkPacket(event, Identity.WINDOW_CLICK);
					} else
						packetsModule.checkPacket(event, Identity.WINDOW_CLICK);
				}
			} else
				packetsModule.checkPacket(event, Identity.WINDOW_CLICK);
		}
	}
}