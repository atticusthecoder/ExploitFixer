package twolovers.exploitfixer.bukkit.listeners;

import org.bukkit.Material;
import org.bukkit.entity.HumanEntity;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryAction;
import org.bukkit.event.inventory.InventoryCreativeEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.Potion;
import twolovers.exploitfixer.interfaces.managers.ModuleManager;
import twolovers.exploitfixer.interfaces.modules.ItemsFixModule;

public class InventoryCreativeListener implements Listener {
	private final ItemsFixModule itemsFixModule;

	public InventoryCreativeListener(final ModuleManager moduleManager) {
		this.itemsFixModule = moduleManager.getItemsFixModule();
	}

	@EventHandler(priority = EventPriority.LOW, ignoreCancelled = true)
	public void onInventoryCreative(final InventoryCreativeEvent event) {
		final HumanEntity whoClicked = event.getWhoClicked();

		if (itemsFixModule.isEnabled() && event.getAction() == InventoryAction.PLACE_ALL && whoClicked instanceof Player) {
			final ItemStack itemStack = event.getCursor();
			final Material material = itemStack.getType();
			ItemStack itemStackRemake = new ItemStack(material, itemStack.getAmount(), itemStack.getData().getData());
			final ItemMeta itemMeta = itemStack.getItemMeta();

			if (itemMeta != null) {
				if (itemMeta instanceof PotionMeta) {
					((PotionMeta) itemMeta).clearCustomEffects();

					if (material == Material.POTION) {
						final Potion itemStackPotion = Potion.fromItemStack(itemStackRemake);

						if (Potion.fromItemStack(itemStack).isSplash())
							itemStackPotion.setSplash(true);

						itemStackRemake = itemStackPotion.toItemStack(itemStackRemake.getAmount());
					}
				}

				itemMeta.setDisplayName(null);
				itemMeta.setLore(null);

				itemStackRemake.setItemMeta(itemMeta);
			}

			event.setCursor(itemStackRemake);
		}
	}
}